<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btn_Cancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="btn_OK.Text" xml:space="preserve">
    <value>组合</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox20.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAABMCAYAAAAoVToVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAATYSURBVHhe7ZfLahZZFEbzLkK80AOvrW0Q79oqtKjdXkBR
        EEER3yDToBNfwp406EQdiANBUFpoBxn0A2SQSZAMggQCgXDMKXPk21XrP6dO/WVSFLVhgXzZ/8r+DiHq
        xPq4gWwwHIiD4UAcDAfiYDgQB8OBOBgOxMFwIA6GhunpacR9ncimq44A9QcwNJDcQ8ek6KojQP0BDA0k
        99AxKbrqCFB/AEMDyT3mkNjIXlcdAeoPYGgguUePiI7sddURoP4AhgaSe/SI6MheVx0B6g9gaCC5R4+I
        jux11RGg/gCGBpJ79IjoyF5XHQHqD2BoILlHj4iO7HXVEaD+AIYGknv0iOjIXlcdAeoPYGgguUePqEtX
        HQHqD2BoILmHjhnFnv0nx3YEfoYjQP0BDA0k99Axo/CPtn3X4bEcgZ/hCFB/AEMDyXPxj7aw8MVN7qw+
        XJeg/gCGBpLnsnvfieJ38ezs/25yx29FNjMzU9nbaqg/gKGB5Lns3vv90fwUD7f+E3f/wSPc3UqoP4Ch
        geS56KP58Q+3bfJX3N1KqD+AoYHkuZQfzU/4iaP9rYL6AxgaSJ4LPdra2pr7/Hm2Uw9H/QEMDSTPJfxF
        EMY/2OrqqltZWXH/fvqvMw9H/QEMDSTPZc/+UxvPZR9seXnZLS0tuffvP3bi4ag/gKGB5Lns/GVq5IMt
        Li6u/xtuwb19+661h5twx5oB/QEMLSSvgZbYd+B09MHm5+fd3Nyce/X6TSsPR/fUgvpXwdBC8hpoCf9o
        +mAfPn4qHszP1JEL7uDh3wsOTZ1z585fM59tAt1TC+pfBUMLyWugJfyj6YNN7jjknr94WTzaxcs33eMn
        T83+uOgdqdFd7F8FQ4tIU6O7WsI/mj6Yz44e/2PjU674s+6Pi96RGt3F/lUwtIg0NbqrJfyjFQ8mv68u
        Xbntnv39T/G5y3/eMfvjonekRnexfxUMLSJNje5qiWs37rntu6ZM5jl+4tLGJ507eeZK5etN0TtSo7vY
        vwqGFpGmRnepTJlbtx8W38PP1et3cacJekdqdLfSncHQItLU6C6VIU6d/evH96KvN0HvSI3umt6jwdAi
        0tToLpXZLPSO1Ogu9q+CoUWkqdFdKrNZ6B1ZUP8qGFpIXgMqs1nQPbWg/lUwtJC8BlRms6B7akH9q2Bo
        IXkNqEzXwf5VMDSQvK9QfwBDA8n7CvUHMDSQvK9QfwBDA8n7CvUHMDSQvK9QfwBDA8n7CvUHMDSQvK9Q
        fwBDA8n7CvUHMDSQvK9QfwBDA8n7CvUHMDSQvK9QfwBDA8rh/5p1aNvR1FN2BKg/gKEB5XBIHdp2NPWU
        HQHqD2BoQDkcUoe2HU09ZUeA+gMYGlAuB6RGd9t25Hh0r+wIUH8AQwPK5YDU6G7bjhyP7pUdAeoPYGhA
        uRyQGt1t25Hj0b2yI0D9AQwNKJcDUqO7bTtyPLpXdgSoP4ChAeVyQGp0t21Hjkf3yo4A9QcwNKBcDkiN
        7rbtyPHoXtkRoP4AhgaUywGp0d22HTke3Ss7AtQfwNCAcjkgNbrbtiPHo3tlR4D6AxgaUC4H5NC2o6mn
        7AhQfwBDA8rhkDq07WjqKTsC1B/A0IByOKQObTuaesqOAPUHMByIg+FAHAwH4mA4EAfDgTgYDsTBcCAO
        hgMjmXDfANon7p11Csb1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="srmLabel38.Text" xml:space="preserve">
    <value>1. 点击以选择想要组合的衬垫.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>设置衬垫组合</value>
  </data>
</root>